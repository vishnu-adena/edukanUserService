CREATE TABLE "authorization"
(
    id                            VARCHAR(255) NOT NULL,
    registered_client_id          VARCHAR(255),
    principal_name                VARCHAR(255),
    authorization_grant_type      VARCHAR(255),
    authorized_scopes             VARCHAR(1000),
    attributes                    VARCHAR(4000),
    state                         VARCHAR(500),
    authorization_code_value      VARCHAR(4000),
    authorization_code_issued_at  TIMESTAMP WITHOUT TIME ZONE,
    authorization_code_expires_at TIMESTAMP WITHOUT TIME ZONE,
    authorization_code_metadata   VARCHAR(255),
    access_token_value            VARCHAR(4000),
    access_token_issued_at        TIMESTAMP WITHOUT TIME ZONE,
    access_token_expires_at       TIMESTAMP WITHOUT TIME ZONE,
    access_token_metadata         VARCHAR(2000),
    access_token_type             VARCHAR(255),
    access_token_scopes           VARCHAR(1000),
    refresh_token_value           VARCHAR(4000),
    refresh_token_issued_at       TIMESTAMP WITHOUT TIME ZONE,
    refresh_token_expires_at      TIMESTAMP WITHOUT TIME ZONE,
    refresh_token_metadata        VARCHAR(2000),
    oidc_id_token_value           VARCHAR(4000),
    oidc_id_token_issued_at       TIMESTAMP WITHOUT TIME ZONE,
    oidc_id_token_expires_at      TIMESTAMP WITHOUT TIME ZONE,
    oidc_id_token_metadata        VARCHAR(2000),
    oidc_id_token_claims          VARCHAR(2000),
    user_code_value               VARCHAR(4000),
    user_code_issued_at           TIMESTAMP WITHOUT TIME ZONE,
    user_code_expires_at          TIMESTAMP WITHOUT TIME ZONE,
    user_code_metadata            VARCHAR(2000),
    device_code_value             VARCHAR(4000),
    device_code_issued_at         TIMESTAMP WITHOUT TIME ZONE,
    device_code_expires_at        TIMESTAMP WITHOUT TIME ZONE,
    device_code_metadata          VARCHAR(2000),
    CONSTRAINT pk_authorization PRIMARY KEY (id)
);

CREATE TABLE authorization_consent
(
    registered_client_id VARCHAR(255) NOT NULL,
    principal_name       VARCHAR(255) NOT NULL,
    authorities          VARCHAR(1000),
    CONSTRAINT pk_authorizationconsent PRIMARY KEY (registered_client_id, principal_name)
);

CREATE TABLE client
(
    id                            VARCHAR(255) NOT NULL,
    client_id                     VARCHAR(255),
    client_id_issued_at           TIMESTAMP WITHOUT TIME ZONE,
    client_secret                 VARCHAR(255),
    client_secret_expires_at      TIMESTAMP WITHOUT TIME ZONE,
    client_name                   VARCHAR(255),
    client_authentication_methods VARCHAR(1000),
    authorization_grant_types     VARCHAR(1000),
    redirect_uris                 VARCHAR(1000),
    post_logout_redirect_uris     VARCHAR(1000),
    scopes                        VARCHAR(1000),
    client_settings               VARCHAR(2000),
    token_settings                VARCHAR(2000),
    CONSTRAINT pk_client PRIMARY KEY (id)
);

CREATE TABLE role
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    deleted   BOOLEAN                                 NOT NULL,
    role_name VARCHAR(255),
    CONSTRAINT pk_role PRIMARY KEY (id)
);

CREATE TABLE token
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    deleted   BOOLEAN                                 NOT NULL,
    token     VARCHAR(255),
    user_id   BIGINT,
    expire_at TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_token PRIMARY KEY (id)
);

CREATE TABLE users
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    deleted           BOOLEAN                                 NOT NULL,
    name              VARCHAR(255),
    email             VARCHAR(255),
    hashed_password   VARCHAR(255),
    is_email_verified BOOLEAN                                 NOT NULL,
    CONSTRAINT pk_users PRIMARY KEY (id)
);

CREATE TABLE users_roles
(
    users_id BIGINT NOT NULL,
    roles_id BIGINT NOT NULL
);

ALTER TABLE token
    ADD CONSTRAINT FK_TOKEN_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE users_roles
    ADD CONSTRAINT fk_userol_on_role FOREIGN KEY (roles_id) REFERENCES role (id);

ALTER TABLE users_roles
    ADD CONSTRAINT fk_userol_on_users FOREIGN KEY (users_id) REFERENCES users (id);